{"ast":null,"code":"import instance from '../../axios';\nimport PrescriptionDetails from './PrescriptionDetails.vue';\nexport default {\n  data() {\n    return {\n      desc: \"问诊列表统计\",\n      //注意，函数里有日期比较逻辑，所以务必注意后端的日期数据格式！！！\n      // 把stus设置成数据库读取的内容就好\n      patient: [{\n        name: \"小王\",\n        age: 18,\n        sex: \"男\",\n        date: \"2024年4月27日\"\n      }, {\n        name: \"小张\",\n        age: 17,\n        sex: \"男\",\n        date: \"2024年2月15日\"\n      }, {\n        name: \"小秋\",\n        age: 16,\n        sex: \"女\",\n        date: \"2024年1月15日\"\n      }],\n      //这里设置数据初始化\n      filteredPatients: []\n    };\n  },\n  components: {\n    PrescriptionDetails\n  },\n  methods: {\n    getPatientsData() {\n      instance.axios.get('/patients', {}).then(res => {\n        const data = res.data;\n        this.patient = data;\n        console.log('Fetched users data:', data);\n      }).catch(error => {\n        console.error('Error fetching users data:', error);\n      });\n    },\n    showPrescriptionDetails(row) {\n      this.$refs.prescriptionDetails.openModal(row);\n    },\n    selectFunc(index) {\n      let today = new Date();\n      today.setHours(0, 0, 0, 0); // Set time to midnight\n      let yesterday = new Date(today);\n      yesterday.setDate(yesterday.getDate() - 1);\n      switch (index) {\n        case '1':\n          // 今日\n          this.filteredPatients = this.patient.filter(stu => {\n            let parts = stu.date.split('年').join('-').split('月').join('-').split('日').join('').split('-');\n            let stuDate = new Date(parts[0], parts[1] - 1, parts[2]);\n            stuDate.setHours(0, 0, 0, 0);\n            return stuDate.toDateString() === today.toDateString();\n          });\n          break;\n        case '2':\n          // 昨日\n          this.filteredPatients = this.patient.filter(stu => {\n            let parts = stu.date.split('年').join('-').split('月').join('-').split('日').join('').split('-');\n            let stuDate = new Date(parts[0], parts[1] - 1, parts[2]);\n            stuDate.setHours(0, 0, 0, 0);\n            return stuDate.toDateString() === yesterday.toDateString();\n          });\n          break;\n        case '3':\n          // 更早\n          this.filteredPatients = this.patient.filter(stu => {\n            let parts = stu.date.split('年').join('-').split('月').join('-').split('日').join('').split('-');\n            let stuDate = new Date(parts[0], parts[1] - 1, parts[2]);\n            stuDate.setHours(0, 0, 0, 0);\n            return stuDate < yesterday;\n          });\n          break;\n      }\n      console.log(this.filteredPatients);\n    }\n  },\n  mounted() {\n    this.getPatientsData();\n    // 等待 DOM 更新后再执行筛选逻辑\n    //唉我真吐了，1记得加上单引号\n    this.$nextTick(() => {\n      this.selectFunc('1');\n    });\n  }\n};","map":{"version":3,"names":["instance","PrescriptionDetails","data","desc","patient","name","age","sex","date","filteredPatients","components","methods","getPatientsData","axios","get","then","res","console","log","catch","error","showPrescriptionDetails","row","$refs","prescriptionDetails","openModal","selectFunc","index","today","Date","setHours","yesterday","setDate","getDate","filter","stu","parts","split","join","stuDate","toDateString","mounted","$nextTick"],"sources":["E:\\2024年春\\SoftwareEngineering\\Design\\SEGroup6\\猫猫就诊\\Project\\frontend\\src\\components\\Prescription\\MakePrescription.vue"],"sourcesContent":["<template>\r\n  <!-- 注意调用的位置 -->\r\n  <PrescriptionDetails ref=\"prescriptionDetails\"> </PrescriptionDetails>\r\n  <!-- 设置标题 -->\r\n  <el-container style=\"height: 100vh;\">\r\n    <el-container>\r\n      <el-aside width=\"200px\">\r\n        <!-- 下边的部分是选择菜单 -->\r\n        <el-menu class=\"aside my-menu\" @select=\"selectFunc\" default-active=\"1\" :unique-opened=\"true\">\r\n          <el-sub-menu index=\"1\">\r\n            <template #title>\r\n              <span>问诊列表</span>\r\n            </template>\r\n            <el-menu-item index=\"1\">今日</el-menu-item>\r\n            <el-menu-item index=\"2\">昨日</el-menu-item>\r\n            <el-menu-item index=\"3\">更早</el-menu-item>\r\n          </el-sub-menu>\r\n        </el-menu>\r\n      </el-aside>\r\n      <el-container>\r\n        <!-- 在这里插入了一个空标题，让表格内容和菜单内容间距看起来舒服点 -->\r\n        <el-header height=\"30px\" style=\"padding:0;margin:0\">\r\n        </el-header>\r\n        <el-main class=\"main\">\r\n          <div>\r\n            <el-table :data=\"filteredPatients\">\r\n              <!-- 可以加上一个问诊号 -->\r\n              <el-table-column prop=\"name\" label=\"姓名\">\r\n              </el-table-column>\r\n              <el-table-column prop=\"age\" label=\"年龄\">\r\n              </el-table-column>\r\n              <el-table-column prop=\"sex\" label=\"性别\">\r\n              </el-table-column>\r\n              <el-table-column prop=\"date\" style=\"background-color:black\" label=\"问诊时间\">\r\n              </el-table-column>\r\n              <el-table-column style=\"text-align: right\" label=\"操作\">\r\n                <template #default=\"scope\">\r\n                  <el-button class=\"prescribe-button\" @click=\"showPrescriptionDetails(scope.row)\">开具处方</el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n            <!-- 分页组件 -->\r\n            <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\" :page-sizes=\"[10, 20, 30, 40]\" :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\" :total=\"totalItems\" :hide-on-single-page=\"false\">\r\n            </el-pagination>\r\n          </div>\r\n        </el-main>\r\n\r\n\r\n        <el-footer height=\"30px\" align=\"center\" class=\"footer\">SE_GROUP_6</el-footer>\r\n      </el-container>\r\n    </el-container>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport instance from '../../axios';\r\nimport PrescriptionDetails from './PrescriptionDetails.vue'\r\nexport default {\r\n  data () {\r\n    return {\r\n      desc: \"问诊列表统计\",\r\n      //注意，函数里有日期比较逻辑，所以务必注意后端的日期数据格式！！！\r\n      // 把stus设置成数据库读取的内容就好\r\n      patient: [\r\n        {\r\n          name: \"小王\",\r\n          age: 18,\r\n          sex: \"男\",\r\n          date: \"2024年4月27日\"\r\n        }, {\r\n          name: \"小张\",\r\n          age: 17,\r\n          sex: \"男\",\r\n          date: \"2024年2月15日\"\r\n        }, {\r\n          name: \"小秋\",\r\n          age: 16,\r\n          sex: \"女\",\r\n          date: \"2024年1月15日\"\r\n        }\r\n      ],\r\n      //这里设置数据初始化\r\n      filteredPatients: [\r\n      ],\r\n    }\r\n  },\r\n  components: {\r\n    PrescriptionDetails,\r\n  },\r\n  methods: {\r\n    getPatientsData () {\r\n      instance.axios.get('/patients', {})\r\n        .then(res => {\r\n          const data = res.data;\r\n          this.patient = data;\r\n          console.log('Fetched users data:', data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching users data:', error);\r\n        });\r\n    },\r\n    showPrescriptionDetails (row) {\r\n      this.$refs.prescriptionDetails.openModal(row);\r\n    },\r\n    selectFunc (index) {\r\n      let today = new Date();\r\n      today.setHours(0, 0, 0, 0); // Set time to midnight\r\n      let yesterday = new Date(today);\r\n      yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n      switch (index) {\r\n        case '1':\r\n          // 今日\r\n          this.filteredPatients = this.patient.filter(stu => {\r\n            let parts = stu.date.split('年').join('-').split('月').join('-').split('日').join('').split('-');\r\n            let stuDate = new Date(parts[0], parts[1] - 1, parts[2]);\r\n            stuDate.setHours(0, 0, 0, 0);\r\n            return stuDate.toDateString() === today.toDateString();\r\n          });\r\n          break;\r\n        case '2':\r\n          // 昨日\r\n          this.filteredPatients = this.patient.filter(stu => {\r\n            let parts = stu.date.split('年').join('-').split('月').join('-').split('日').join('').split('-');\r\n            let stuDate = new Date(parts[0], parts[1] - 1, parts[2]);\r\n            stuDate.setHours(0, 0, 0, 0);\r\n            return stuDate.toDateString() === yesterday.toDateString();\r\n          });\r\n          break;\r\n        case '3':\r\n          // 更早\r\n          this.filteredPatients = this.patient.filter(stu => {\r\n            let parts = stu.date.split('年').join('-').split('月').join('-').split('日').join('').split('-');\r\n            let stuDate = new Date(parts[0], parts[1] - 1, parts[2]);\r\n            stuDate.setHours(0, 0, 0, 0);\r\n            return stuDate < yesterday;\r\n          });\r\n          break;\r\n      }\r\n      console.log(this.filteredPatients);\r\n    },\r\n  },\r\n  mounted () {\r\n    this.getPatientsData();\r\n    // 等待 DOM 更新后再执行筛选逻辑\r\n    //唉我真吐了，1记得加上单引号\r\n    this.$nextTick(() => {\r\n      this.selectFunc('1');\r\n    });\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n.header {\r\n  font-size: 30px;\r\n  line-height: 80px;\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n/*菜单栏*/\r\n.aside {\r\n  background-color: wheat;\r\n}\r\n\r\n.my-menu .el-menu-item.is-active {\r\n  color: black;\r\n  background-color: cornflowerblue;\r\n  opacity: 0.5;\r\n}\r\n\r\n/*标题的下划线*/\r\n.subHeader {\r\n  /*background-color: cornflowerblue*/\r\n  background-color: black;\r\n}\r\n\r\n/*问诊列表*/\r\n.main {\r\n  background-color: white;\r\n  background-image: url(../../assets/prescription/prescription_bg.png);\r\n}\r\n\r\n.prescribe-button {\r\n  background-color: whitesmoke;\r\n  margin-left: -10px;\r\n  max-width: 75px;\r\n}\r\n\r\n/*页尾*/\r\n.footer {\r\n  background-color: rgb(8, 3, 88);\r\n  color: white;\r\n  font-size: 17px;\r\n  line-height: 30px;\r\n\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}