{"ast":null,"code":"import PrescriptionDetails from './PrescriptionDetails.vue';\nexport default {\n  data() {\n    return {\n      desc: \"问诊列表统计\",\n      //注意，函数里有日期比较逻辑，所以务必注意后端的日期数据格式！！！\n      stus: [{\n        name: \"小王\",\n        age: 18,\n        sex: \"男\",\n        date: \"2024年3月15日\"\n      }, {\n        name: \"小张\",\n        age: 17,\n        sex: \"男\",\n        date: \"2024年2月15日\"\n      }, {\n        name: \"小秋\",\n        age: 16,\n        sex: \"女\",\n        date: \"2024年1月15日\"\n      }],\n      filteredStus: []\n    };\n  },\n  components: {\n    PrescriptionDetails\n  },\n  methods: {\n    showPrescriptionDetails(row) {\n      this.$refs.prescriptionDetails.openModal(row);\n    },\n    selectFunc(index) {\n      let today = new Date();\n      today.setHours(0, 0, 0, 0); // Set time to midnight\n      let yesterday = new Date(today);\n      yesterday.setDate(yesterday.getDate() - 1);\n      switch (index) {\n        case '1':\n          // 今日\n          this.filteredStus = this.stus.filter(stu => {\n            let parts = stu.date.split('年').join('-').split('月').join('-').split('日').join('').split('-');\n            let stuDate = new Date(parts[0], parts[1] - 1, parts[2]);\n            stuDate.setHours(0, 0, 0, 0);\n            return stuDate.toDateString() === today.toDateString();\n          });\n          break;\n        case '2':\n          // 昨日\n          this.filteredStus = this.stus.filter(stu => {\n            let parts = stu.date.split('年').join('-').split('月').join('-').split('日').join('').split('-');\n            let stuDate = new Date(parts[0], parts[1] - 1, parts[2]);\n            stuDate.setHours(0, 0, 0, 0);\n            return stuDate.toDateString() === yesterday.toDateString();\n          });\n          break;\n        case '3':\n          // 更早\n          this.filteredStus = this.stus.filter(stu => {\n            let parts = stu.date.split('年').join('-').split('月').join('-').split('日').join('').split('-');\n            let stuDate = new Date(parts[0], parts[1] - 1, parts[2]);\n            stuDate.setHours(0, 0, 0, 0);\n            return stuDate < yesterday;\n          });\n          break;\n      }\n    },\n    prescribe(index, row) {\n      console.log(`开具处方给 ${index} ${row.name}`);\n    }\n  }\n};","map":{"version":3,"names":["PrescriptionDetails","data","desc","stus","name","age","sex","date","filteredStus","components","methods","showPrescriptionDetails","row","$refs","prescriptionDetails","openModal","selectFunc","index","today","Date","setHours","yesterday","setDate","getDate","filter","stu","parts","split","join","stuDate","toDateString","prescribe","console","log"],"sources":["E:\\2024年春\\SoftwareEngineering\\se_group6_project\\zqs_project_1\\src\\components\\MakePrescription.vue"],"sourcesContent":["<template>\n  <!-- 注意调用的位置 -->\n  <PrescriptionDetails ref=\"prescriptionDetails\"> </PrescriptionDetails>\n  <!-- 设置标题 -->\n  <el-container style=\"height: 100vh;\">\n    <el-container>\n      <el-aside width=\"200px\">\n        <!-- 下边的部分是选择菜单 -->\n        <el-menu class=\"aside\" @select=\"selectFunc\" default-active=\"1\" :unique-opened=\"true\">\n          <el-sub-menu index=\"1\">\n            <template #title>\n              <span>问诊列表</span>\n            </template>\n            <el-menu-item index=\"1\">今日</el-menu-item>\n            <el-menu-item index=\"2\">昨日</el-menu-item>\n            <el-menu-item index=\"3\">更早</el-menu-item>\n          </el-sub-menu>\n        </el-menu>\n      </el-aside>\n      <el-container>\n\n        <!-- 在这里插入了一个空标题，让表格内容和菜单内容间距看起来舒服点 -->\n        <el-header height=\"30px\" style=\"padding:0;margin:0\">\n        </el-header>\n\n        <el-main class=\"main\">\n          <div>\n            <el-table :data=\"filteredStus\">\n              <!-- 可以加上一个问诊号 -->\n              <el-table-column prop=\"name\" label=\"姓名\">\n              </el-table-column>\n              <el-table-column prop=\"age\" label=\"年龄\">\n              </el-table-column>\n              <el-table-column prop=\"sex\" label=\"性别\">\n              </el-table-column>\n              <el-table-column prop=\"date\" style=\"background-color:black\" label=\"问诊时间\">\n              </el-table-column>\n              <el-table-column style=\"text-align: right\" label=\"操作\">\n\n                <template #default=\"scope\">\n                  <el-button class=\"prescribe-button\" @click=\"showPrescriptionDetails(scope.row)\">开具处方</el-button>\n                </template>\n\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-main>\n\n        <el-footer height=\"30px\" align=\"center\" class=\"footer\">SE_GROUP_6</el-footer>\n      </el-container>\n    </el-container>\n  </el-container>\n</template>\n\n<script>\nimport PrescriptionDetails from './PrescriptionDetails.vue'\nexport default {\n  data () {\n    return {\n      desc: \"问诊列表统计\",\n      //注意，函数里有日期比较逻辑，所以务必注意后端的日期数据格式！！！\n      stus: [\n        {\n          name: \"小王\",\n          age: 18,\n          sex: \"男\",\n          date: \"2024年3月15日\"\n        }, {\n          name: \"小张\",\n          age: 17,\n          sex: \"男\",\n          date: \"2024年2月15日\"\n        }, {\n          name: \"小秋\",\n          age: 16,\n          sex: \"女\",\n          date: \"2024年1月15日\"\n        }\n      ],\n      filteredStus: [],\n    }\n  },\n  components: {\n    PrescriptionDetails,\n  },\n  methods: {\n    showPrescriptionDetails (row) {\n      this.$refs.prescriptionDetails.openModal(row);\n    },\n    selectFunc (index) {\n      let today = new Date();\n      today.setHours(0, 0, 0, 0); // Set time to midnight\n      let yesterday = new Date(today);\n      yesterday.setDate(yesterday.getDate() - 1);\n\n      switch (index) {\n        case '1':\n          // 今日\n          this.filteredStus = this.stus.filter(stu => {\n            let parts = stu.date.split('年').join('-').split('月').join('-').split('日').join('').split('-');\n            let stuDate = new Date(parts[0], parts[1] - 1, parts[2]);\n            stuDate.setHours(0, 0, 0, 0);\n            return stuDate.toDateString() === today.toDateString();\n          });\n          break;\n        case '2':\n          // 昨日\n          this.filteredStus = this.stus.filter(stu => {\n            let parts = stu.date.split('年').join('-').split('月').join('-').split('日').join('').split('-');\n            let stuDate = new Date(parts[0], parts[1] - 1, parts[2]);\n            stuDate.setHours(0, 0, 0, 0);\n            return stuDate.toDateString() === yesterday.toDateString();\n          });\n          break;\n        case '3':\n          // 更早\n          this.filteredStus = this.stus.filter(stu => {\n            let parts = stu.date.split('年').join('-').split('月').join('-').split('日').join('').split('-');\n            let stuDate = new Date(parts[0], parts[1] - 1, parts[2]);\n            stuDate.setHours(0, 0, 0, 0);\n            return stuDate < yesterday;\n          });\n          break;\n      }\n    },\n\n    prescribe (index, row) {\n      console.log(`开具处方给 ${index} ${row.name}`)\n    }\n  }\n}\n</script>\n\n\n\n<style scoped>\n.header {\n  font-size: 30px;\n  line-height: 80px;\n  background-color: #f1f1f1;\n}\n\n/*菜单栏*/\n.aside {\n  background-color: wheat;\n}\n\n/*标题的下划线*/\n.subHeader {\n  background-color: cornflowerblue;\n}\n\n/*问诊列表*/\n.main {\n  background-color: white;\n}\n\n.prescribe-button {\n  background-color: whitesmoke;\n  margin-left: -10px;\n  max-width: 75px;\n}\n\n/*最下边的哪个*/\n.footer {\n  background-color: dimgrey;\n  color: white;\n  font-size: 17px;\n  line-height: 30px;\n\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}